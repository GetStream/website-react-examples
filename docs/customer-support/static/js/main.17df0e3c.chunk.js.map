{"version":3,"sources":["assets/kevin-avatar.png","assets/jen-avatar.png","assets/user3.png","assets/user2.png","ChecklistTasks.js","components/AgentChannelList/AgentChannelList.js","components/AgentChannelList/AgentChannelPreview.js","assets/BellIcon.js","assets/ClockIcon.js","assets/CloseIcon.js","assets/CloseCustomerIcon.js","assets/DownIcon.js","assets/DownIconSmall.js","assets/EmailIcon.js","assets/FileIcon.js","assets/HeadsetIcon.js","assets/OpenCustomerIcon.js","assets/PhoneIcon.js","assets/SearchIcon.js","assets/SmileyFace.js","assets/TalkingIcon.js","components/AgentChannelListContainer/AgentChannelListContainer.js","components/AgentChannelHeader/NotificationPopup.js","components/AgentChannelHeader/AgentChannelHeader.js","components/MessageInput/UploadsPreview.js","components/MessageInput/AgentMessageInput.js","AgentApp.js","components/AgentHeader/AgentHeader.js","components/AgentLoading/AgentLoading.js","components/CustomerEmptyStateIndicator/EmptyStateIndicator.js","components/CustomerChannelHeader/CustomerChannelHeader.js","components/MessageInput/CustomerMessageInput.js","CustomerApp.js","App.js","serviceWorker.js","index.js","assets/user1.png"],"names":["module","exports","useChecklist","customerClient","targetOrigin","useEffect","parent","notify","message","window","postMessage","handleNewEvent","type","on","off","AgentChannelList","error","loading","children","className","AgentChannelPreview","props","agentChannelId","channel","customerChannelId","setActiveChannel","useContext","ChatContext","activeChannel","client","useState","state","unreadCount","setUnreadCount","selected","id","messages","length","onClick","alt","data","name","src","image","height","width","subtitle","lastMessageText","text","slice","renderMessageText","BellIcon","style","display","marginLeft","marginRight","viewBox","fill","xmlns","d","ClockIcon","fillOpacity","CloseIcon","CloseCustomerIcon","cx","cy","r","DownIcon","DownIconSmall","EmailIcon","stroke","strokeOpacity","strokeLinecap","strokeLinejoin","FileIcon","HeadsetIcon","OpenCustomerIcon","PhoneIcon","SearchIcon","fillRule","clipRule","SmileyFace","openEmojiPicker","TalkingIcon","ChannelSearch","onChange","e","console","log","target","value","placeholder","options","member","watch","limit","sort","last_message_at","AgentChannelListContainer","filters","$in","List","Preview","previewProps","NotificationPopup","eventChannel","previewText","setPopupVisible","AgentChannelHeader","setEventChannel","popupVisible","setPreviewText","handleEvent","event","a","channel_id","automated","queryChannels","cid","response","setTimeout","created_by","phone","email","issue","UploadsPreview","fileOrder","fileUploads","imageOrder","imageUploads","numberOfUploads","removeFile","removeImage","uploadFile","uploadImage","uploadNewFiles","channelContext","ChannelContext","map","handleRemove","handleRetry","handleFiles","multiple","multipleUploads","disabled","undefined","maxNumberOfFiles","uploads","automatedResponses","AgentMessageInput","messageInput","useMessageInput","acceptedFiles","index","sendMessage","accept","commands","getCommands","innerRef","textareaRef","handleSubmit","onSelectItem","handleChange","rows","maxRows","onPaste","triggers","autocompleteTriggers","grow","additionalTextareaProps","AgentApp","Message","MessageCommerce","focus","Input","AgentHeader","require","AgentLoading","openingPrompts","EmptyStateIndicator","prompt","i","key","sendInitialMessage","CustomerChannelHeader","role","aria-label","CustomerMessageInput","open","setOpen","current","blur","startsWith","CustomerApp","customerChannel","setCustomerChannel","newChannel","clearMessages","getCustomerChannel","background","urlParams","URLSearchParams","location","search","apiKey","get","process","REACT_APP_STREAM_KEY","uuidv4","REACT_APP_TARGET_ORIGIN","previousUserId","REACT_APP_PREVIOUS_ID","previousUserToken","REACT_APP_PREVIOUS_TOKEN","agentUserId","REACT_APP_AGENT_ID","agentUserToken","REACT_APP_AGENT_TOKEN","customerUserId","REACT_APP_CUSTOMER_ID","customerUserToken","REACT_APP_CUSTOMER_TOKEN","StreamChat","getInstance","connectUser","App","agentClient","setAgentClient","initialClient","setInitialClient","initialChannel","setInitialChannel","getInitialChannel","sendMessages","stopWatching","disconnect","existingChannel","theme","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17df0e3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kevin-avatar.086d0832.png\";","module.exports = __webpack_public_path__ + \"static/media/jen-avatar.4e8c1024.png\";","module.exports = __webpack_public_path__ + \"static/media/user3.0a41ee38.png\";","module.exports = __webpack_public_path__ + \"static/media/user2.0a359241.png\";","import { useEffect } from 'react';\n\nconst notifyParent = (parent) => (message) => {\n  window.parent.postMessage(message, parent);\n}\n\n// We have to keep this task list up-to-date with the website's checklist\nconst [SEND_MESSAGE] = [\n  'customer-send-message',\n];\n\nexport const useChecklist = (customerClient, targetOrigin) => {\n  useEffect(() => {\n    const notify = notifyParent(targetOrigin);\n    const handleNewEvent = ({ type }) => {\n      switch(type) {\n        case 'message.new':\n          notify(SEND_MESSAGE);\n          break;\n        default:\n          break;\n      }\n    }\n    if (customerClient) {\n      customerClient.on(handleNewEvent);\n    }\n    return () => customerClient?.off(handleNewEvent);\n  }, [customerClient, targetOrigin]);\n};\n","import React from 'react';\n\nimport './AgentChannelList.css';\n\nexport const AgentChannelList = ({ error = false, loading, children }) => {\n  if (error) {\n    return (\n      <div className=\"agent-channel-list\">\n        <p className=\"agent-channel-list__message\">\n          Connection error, please wait a moment and try again.\n        </p>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"agent-channel-list\">\n        <p className=\"agent-channel-list__message\">Conversations loading....</p>\n      </div>\n    );\n  }\n\n  return <div className=\"agent-channel-list\">{children}</div>;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { ChatContext } from 'stream-chat-react';\n\nimport './AgentChannelPreview.css';\n\nexport const AgentChannelPreview = (props) => {\n  const {\n    agentChannelId,\n    channel,\n    customerChannelId,\n    setActiveChannel,\n  } = props;\n\n  const { channel: activeChannel, client } = useContext(ChatContext);\n  const [unreadCount, setUnreadCount] = useState(channel.state.unreadCount);\n\n  const selected = channel?.id === activeChannel?.id;\n\n  useEffect(() => {\n    client.on('message.read', () => setUnreadCount(0));\n    return () => client.off('message.read');\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    client.on('message.new', () => setUnreadCount(channel.state.unreadCount));\n    return () => client.off('message.new');\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderMessageText = () => {\n    const lastMessageText =\n      channel.state.messages[channel.state.messages.length - 1].text;\n\n    return lastMessageText.length < 70\n      ? lastMessageText\n      : `${lastMessageText.slice(0, 70)}...`;\n  };\n\n  if (\n    !channel.state.messages.length ||\n    (channel.id !== agentChannelId && channel.id !== customerChannelId)\n  )\n    return null;\n\n  return (\n    <div\n      className={\n        selected\n          ? 'agent-channel-preview__wrapper selected'\n          : 'agent-channel-preview__wrapper'\n      }\n      onClick={() => setActiveChannel(channel)}\n    >\n      <div className=\"agent-channel-preview__top\">\n        <div className=\"agent-channel-preview__image-wrapper\">\n          <img\n            alt={channel.data.name}\n            src={channel.data.image}\n            height=\"36px\"\n            width=\"36px\"\n          />\n        </div>\n        <div className=\"agent-channel-preview__name-wrapper\">\n          <div className=\"agent-channel-preview__name-count-wrapper\">\n            <p className=\"agent-channel-preview__name\">{channel.data.name}</p>\n            {!!unreadCount && !selected && (\n              <div className=\"agent-channel-preview__unread-count\">\n                {unreadCount}\n              </div>\n            )}\n          </div>\n          <p className=\"agent-channel-preview__text-inquiry\">\n            {channel.data.subtitle}\n          </p>\n        </div>\n      </div>\n      <p className=\"agent-channel-preview__message\">{renderMessageText()}</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const BellIcon = () => (\n  <div style={{ display: 'flex', marginLeft: '4px', marginRight: '20px' }}>\n    <svg\n      width=\"16\"\n      height=\"19\"\n      viewBox=\"0 0 16 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.79403 3.53208C8.10593 3.53208 8.84693 3.7293 8.84693 3.7293C10.8544 4.18933 12.2674 6.03841 12.2674 8.12611V13.1636V13.7454L12.6779 14.1577L13.0208 14.5022H2.47921L2.82214 14.1577L3.23259 13.7454V13.1636V8.12611C3.23259 6.03845 4.6456 4.18933 6.65307 3.7293C6.65307 3.7293 7.44757 3.53208 7.70597 3.53208H7.79403ZM7.75 0.340881C6.97491 0.340881 6.38234 0.936134 6.38234 1.71474V2.35584C3.78367 2.95131 1.8235 5.33259 1.8235 8.12611V13.1636L0 14.9954V15.9113H15.5V14.9954L13.6765 13.1636V8.12611C13.6765 5.33259 11.7163 2.95131 9.11765 2.35584V1.71474C9.11765 0.936134 8.52509 0.340881 7.75 0.340881ZM9.5735 16.8272H5.92646C5.92646 17.8348 6.74695 18.6591 7.75 18.6591C8.75305 18.6591 9.5735 17.8348 9.5735 16.8272Z\"\n        fill=\"white\"\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const ClockIcon = () => (\n  <svg\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M6.00003 10.7999C8.65203 10.7999 10.8 8.65079 10.8 5.99993C10.8 3.34913 8.65203 1.19995 6.00003 1.19995C3.34802 1.19995 1.20001 3.34913 1.20001 5.99993C1.20001 8.65079 3.34802 10.7999 6.00003 10.7999ZM5.99703 0C9.31263 0 12 2.68619 12 5.99999C12 9.31386 9.31263 12 5.99703 12C2.68079 12 0 9.31386 0 5.99999C0 2.68619 2.68079 0 5.99703 0ZM6.30003 3V6.14999L9.00003 7.75145L8.54823 8.49005L5.40003 6.59999V3H6.30003Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const CloseIcon = () => (\n  <svg\n    width=\"14\"\n    height=\"15\"\n    viewBox=\"0 0 14 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M7 0.03125C3.13438 0.03125 0 3.16563 0 7.03125C0 10.8969 3.13438 14.0312 7 14.0312C10.8656 14.0312 14 10.8969 14 7.03125C14 3.16563 10.8656 0.03125 7 0.03125ZM10.3844 9.39062C10.4312 9.4375 10.4563 9.5 10.4563 9.56563C10.4563 9.63125 10.4312 9.69688 10.3844 9.74063L9.70938 10.4187C9.65938 10.4688 9.59688 10.4906 9.53438 10.4906C9.47188 10.4906 9.40625 10.4656 9.35938 10.4187L7 8.05625L4.64375 10.4219C4.59688 10.4719 4.53125 10.4937 4.46875 10.4937C4.40625 10.4937 4.34062 10.4688 4.29375 10.4219L3.61875 9.74375C3.57188 9.69687 3.54688 9.63438 3.54688 9.56875C3.54688 9.50313 3.57188 9.4375 3.61875 9.39375L5.98438 7.01875L3.6125 4.675C3.51563 4.57812 3.51563 4.41875 3.6125 4.32188L4.2875 3.64375C4.33437 3.59688 4.39687 3.57188 4.4625 3.57188C4.52813 3.57188 4.59062 3.59688 4.6375 3.64375L7.00313 5.97813L9.36875 3.64375C9.41562 3.59688 9.47812 3.57188 9.54375 3.57188C9.60938 3.57188 9.67188 3.59688 9.71875 3.64375L10.3938 4.32188C10.4906 4.41875 10.4906 4.57812 10.3938 4.675L8.02188 7.01875L10.3844 9.39062Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const CloseCustomerIcon = () => (\n  <svg\n    width=\"60\"\n    height=\"60\"\n    viewBox=\"0 0 60 60\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"white\" />\n    <path\n      d=\"M37.5233 35.4135L32.1098 30L37.5233 24.5865C38.1078 24.0021 38.1078 23.0611 37.5233 22.4767C36.9388 21.8922 35.9979 21.8922 35.4135 22.4767L30 27.8901L24.5865 22.4767C24.0021 21.8922 23.0611 21.8922 22.4767 22.4767C21.8922 23.0611 21.8922 24.0021 22.4767 24.5865L27.8901 30L22.4767 35.4135C21.8922 35.9979 21.8922 36.9388 22.4767 37.5233C23.0611 38.1078 24.0021 38.1078 24.5865 37.5233L30 32.1098L35.4135 37.5233C35.9979 38.1078 36.9388 38.1078 37.5233 37.5233C38.1036 36.9388 38.1036 35.9938 37.5233 35.4135Z\"\n      fill=\"#858688\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const DownIcon = () => (\n  <div style={{ display: 'flex', marginLeft: '6px' }}>\n    <svg\n      width=\"13\"\n      height=\"7\"\n      viewBox=\"0 0 13 7\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.50004 4.65663L11.2633 0.0847562C11.3809 -0.0300876 11.575 -0.0273533 11.6954 0.0902248L12.5321 0.907803C12.6524 1.02538 12.6551 1.21679 12.5375 1.33163L6.72152 6.91522C6.66137 6.97538 6.57934 7.00272 6.50004 6.99726C6.41801 6.99999 6.33871 6.97265 6.27855 6.91522L0.462539 1.33163C0.344961 1.21679 0.347695 1.02538 0.468008 0.907803L1.30473 0.0902248C1.42504 -0.0273533 1.61918 -0.0300876 1.73676 0.0847562L6.50004 4.65663Z\"\n        fill=\"white\"\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const DownIconSmall = () => (\n  <svg\n    width=\"10\"\n    height=\"5\"\n    viewBox=\"0 0 10 5\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M5.00002 3.32595L8.40236 0.0603222C8.48635 -0.0217091 8.62502 -0.019756 8.71095 0.0642283L9.30861 0.648213C9.39455 0.732197 9.3965 0.868916 9.31252 0.950947L5.15822 4.93923C5.11525 4.9822 5.05666 5.00173 5.00002 4.99782C4.94142 4.99978 4.88478 4.98024 4.84181 4.93923L0.687519 0.950947C0.603535 0.868916 0.605488 0.732197 0.691425 0.648213L1.28908 0.0642283C1.37502 -0.019756 1.51369 -0.0217091 1.59768 0.0603222L5.00002 3.32595Z\"\n      fill=\"#2C2C30\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const EmailIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"12\"\n    viewBox=\"0 0 16 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15 1.30005V11.3H1V1.30005M15 1.30005H1M15 1.30005L8 7.30005L1 1.30005\"\n      stroke=\"#0040A8\"\n      strokeOpacity=\"0.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const FileIcon = () => (\n  <div style={{ display: 'flex', marginLeft: '10px' }}>\n    <svg\n      width=\"11\"\n      height=\"17\"\n      viewBox=\"0 0 11 17\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M4.25 16.25C2.07725 16.25 0.5 14.5153 0.5 12.125V5.75C0.5 2.75675 2.5955 0.5 5.375 0.5C8.1545 0.5 10.25 2.75675 10.25 5.75V11H8.75V5.75C8.75 3.57725 7.33025 2 5.375 2C3.41975 2 2 3.57725 2 5.75V12.125C2 13.4323 2.696 14.75 4.25 14.75C5.804 14.75 6.5 13.4323 6.5 12.125V6.5C6.5 6.0485 6.3905 5 5.375 5C4.3595 5 4.25 6.0485 4.25 6.5V11.75H2.75V6.5C2.75 4.70525 3.80525 3.5 5.375 3.5C6.94475 3.5 8 4.70525 8 6.5V12.125C8 14.5153 6.42275 16.25 4.25 16.25Z\"\n        fill=\"black\"\n        fillOpacity=\"0.2\"\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const HeadsetIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"20\"\n    viewBox=\"0 0 16 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M13.8192 8.33581V6.72164C13.8192 3.50831 11.2042 0.893311 7.99 0.893311C4.77667 0.893311 2.16167 3.50831 2.16167 6.72164V8.33581C1.23667 8.39081 0.5 9.05581 0.5 9.87414V13.4475C0.5 14.3008 1.3 14.9958 2.28333 14.9958H3.39333C3.62333 14.9958 3.81 14.8091 3.81 14.5791V8.74164C3.81 8.51164 3.62333 8.32498 3.39333 8.32498H2.99583V6.72164C2.99583 3.96748 5.23667 1.72664 7.99083 1.72664C10.745 1.72664 12.9867 3.96748 12.9867 6.72164V8.32498H12.585C12.355 8.32498 12.1683 8.51164 12.1683 8.74164V14.5791C12.1683 14.8091 12.355 14.9958 12.585 14.9958H13.695C13.7642 14.9958 13.83 14.985 13.8967 14.9783C13.6608 16.905 12.6258 17.6641 10.1242 17.8066C9.95917 17.5041 9.64917 17.29 9.28083 17.29H8.09417C7.5575 17.29 7.12167 17.7258 7.12167 18.2625C7.12167 18.7991 7.5575 19.235 8.09417 19.235H9.28083C9.68083 19.235 10.0242 18.9916 10.1733 18.6458C12.7875 18.5016 14.5558 17.7108 14.7692 14.6758C15.1967 14.3925 15.4783 13.95 15.4783 13.4483V9.87498C15.4775 9.05748 14.7433 8.39331 13.8192 8.33581ZM2.97667 14.1625H2.28333C1.76833 14.1625 1.33333 13.8341 1.33333 13.4475V9.87414C1.33333 9.48664 1.76833 9.15831 2.28333 9.15831H2.97667V14.1625ZM9.28 18.4016H8.09333C8.01667 18.4016 7.95417 18.3391 7.95417 18.2625C7.95417 18.1858 8.01667 18.1233 8.09333 18.1233H9.28C9.35667 18.1233 9.41917 18.1858 9.41917 18.2625C9.41917 18.3391 9.35667 18.4016 9.28 18.4016ZM13.0008 14.1625V9.15831H13.6942C14.2092 9.15831 14.6442 9.48664 14.6442 9.87414V13.4475C14.6442 13.835 14.21 14.1625 13.6942 14.1625H13.0008Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const OpenCustomerIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"60\"\n    height=\"60\"\n    fill=\"none\"\n    viewBox=\"0 0 60 60\"\n  >\n    <circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"#005FFF\"></circle>\n    <path\n      fill=\"#fff\"\n      d=\"M16.825 39.736c.13.216.201.461.201.735L16.154 45l4.053-1.594a1.703 1.703 0 011.204-.022h.014c.03.015.058.022.087.037 1.284.526 2.697.822 4.175.822 3.34 0 6.318-1.479 8.28-3.794-1.017.26-2.085.412-3.18.412-6.917 0-12.527-5.41-12.527-12.08 0-.85.093-1.673.266-2.473-2.163 1.882-3.526 4.6-3.526 7.63 0 2.047.62 3.98 1.695 5.588.043.058.086.137.13.21z\"\n    ></path>\n    <path\n      fill=\"#fff\"\n      d=\"M32.474 15c-6.036 0-11.077 4.125-12.26 9.606-.173.8-.267 1.622-.267 2.473 0 6.671 5.604 12.08 12.527 12.08 1.103 0 2.163-.152 3.18-.411a13.97 13.97 0 001.716-.548c.036-.015.065-.03.101-.044.007 0 .015 0 .015-.007a1.907 1.907 0 011.399.022l4.947 1.86-1.226-5.322c0-.317.086-.62.238-.88.043-.079.1-.151.151-.223a11.726 11.726 0 001.983-6.527C45 20.41 39.397 15 32.474 15z\"\n    ></path>\n  </svg>\n);\n","import React from 'react';\n\nexport const PhoneIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"15\"\n    viewBox=\"0 0 16 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M14.6667 10.78V12.78C14.6675 12.9657 14.6294 13.1495 14.555 13.3196C14.4807 13.4897 14.3716 13.6424 14.2348 13.7679C14.0979 13.8934 13.9364 13.989 13.7605 14.0485C13.5847 14.108 13.3983 14.1301 13.2134 14.1133C11.1619 13.8904 9.19137 13.1894 7.46004 12.0667C5.84926 11.0431 4.48359 9.67746 3.46004 8.06668C2.33336 6.32748 1.6322 4.34734 1.41337 2.28668C1.39671 2.10233 1.41862 1.91652 1.4777 1.7411C1.53679 1.56567 1.63175 1.40447 1.75655 1.26776C1.88134 1.13105 2.03324 1.02182 2.20256 0.947028C2.37189 0.872237 2.55493 0.833521 2.74004 0.833347H4.74004C5.06357 0.830163 5.37723 0.944733 5.62254 1.1557C5.86786 1.36667 6.02809 1.65964 6.07337 1.98001C6.15779 2.62006 6.31434 3.2485 6.54004 3.85335C6.62973 4.09196 6.64915 4.35129 6.59597 4.6006C6.5428 4.84991 6.41928 5.07875 6.24004 5.26001L5.39337 6.10668C6.34241 7.77571 7.72434 9.15764 9.39337 10.1067L10.24 9.26001C10.4213 9.08077 10.6501 8.95725 10.8994 8.90408C11.1488 8.85091 11.4081 8.87032 11.6467 8.96001C12.2516 9.18571 12.88 9.34227 13.52 9.42668C13.8439 9.47237 14.1396 9.63548 14.3511 9.88501C14.5625 10.1345 14.6748 10.4531 14.6667 10.78Z\"\n      stroke=\"#0040A8\"\n      strokeOpacity=\"0.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const SearchIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M2.69995 6.94995C2.69995 4.60274 4.60274 2.69995 6.94995 2.69995C9.29716 2.69995 11.2 4.60274 11.2 6.94995C11.2 8.09769 10.745 9.13917 10.0056 9.90388C9.98759 9.91948 9.97002 9.93583 9.95293 9.95293C9.93583 9.97002 9.91948 9.98759 9.90388 10.0056C9.13917 10.745 8.09769 11.2 6.94995 11.2C4.60274 11.2 2.69995 9.29716 2.69995 6.94995ZM10.6057 12.0199C9.5777 12.7624 8.31492 13.2 6.94995 13.2C3.49817 13.2 0.699951 10.4017 0.699951 6.94995C0.699951 3.49817 3.49817 0.699951 6.94995 0.699951C10.4017 0.699951 13.2 3.49817 13.2 6.94995C13.2 8.31492 12.7624 9.5777 12.0199 10.6057L15.0071 13.5929C15.3977 13.9835 15.3977 14.6166 15.0071 15.0071C14.6166 15.3977 13.9835 15.3977 13.5929 15.0071L10.6057 12.0199Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const SmileyFace = ({ openEmojiPicker }) => (\n  <div onClick={openEmojiPicker} style={{ display: 'flex' }}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"none\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fill=\"#000\"\n        fillOpacity=\"0.2\"\n        fillRule=\"evenodd\"\n        d=\"M1.6 8a6.4 6.4 0 1112.8 0A6.4 6.4 0 011.6 8zM8 0a8 8 0 100 16A8 8 0 008 0zM6 7.2a1.2 1.2 0 100-2.4 1.2 1.2 0 000 2.4zM11.2 6a1.2 1.2 0 11-2.4 0 1.2 1.2 0 012.4 0zM5.455 9.141a.8.8 0 10-1.31.918c.542.774 1.578 1.737 2.962 2.024 1.46.303 3.1-.184 4.688-1.948a.8.8 0 00-1.19-1.07C9.313 10.5 8.22 10.68 7.433 10.517c-.863-.18-1.586-.817-1.978-1.376z\"\n        clipRule=\"evenodd\"\n      ></path>\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const TalkingIcon = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M7.52157 2.51709H7.1049C6.87459 2.51709 6.68823 2.70345 6.68823 2.93376C6.68823 3.16406 6.87459 3.35042 7.1049 3.35042H7.52157C7.75187 3.35042 7.93823 3.16406 7.93823 2.93376C7.93823 2.70345 7.75187 2.51709 7.52157 2.51709Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n    <path\n      d=\"M5.02157 2.51709H4.6049C4.37459 2.51709 4.18823 2.70345 4.18823 2.93376C4.18823 3.16406 4.37459 3.35042 4.6049 3.35042H5.02157C5.25187 3.35042 5.43823 3.16406 5.43823 2.93376C5.43823 2.70345 5.25187 2.51709 5.02157 2.51709Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n    <path\n      d=\"M12.5212 2.51709H12.1045C11.8742 2.51709 11.6879 2.70345 11.6879 2.93376C11.6879 3.16406 11.8742 3.35042 12.1045 3.35042H12.5212C12.7515 3.35042 12.9379 3.16406 12.9379 2.93376C12.9379 2.70345 12.7515 2.51709 12.5212 2.51709Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n    <path\n      d=\"M15.0212 2.51709H14.6045C14.3742 2.51709 14.1879 2.70345 14.1879 2.93376C14.1879 3.16406 14.3742 3.35042 14.6045 3.35042H15.0212C15.2515 3.35042 15.4379 3.16406 15.4379 2.93376C15.4379 2.70345 15.2515 2.51709 15.0212 2.51709Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n    <path\n      d=\"M10.0216 2.51709H9.6049C9.37459 2.51709 9.18823 2.70345 9.18823 2.93376C9.18823 3.16406 9.37459 3.35042 9.6049 3.35042H10.0216C10.2519 3.35042 10.4382 3.16406 10.4382 2.93376C10.4382 2.70345 10.2519 2.51709 10.0216 2.51709Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n    <path\n      d=\"M17.9289 0.0170898H2.09595C1.40666 0.0170898 0.845947 0.577798 0.845947 1.26709V4.59961C0.845947 5.2889 1.40666 5.84961 2.09595 5.84961H10.8455V7.86214C10.8455 8.02124 10.9359 8.1661 11.0783 8.23608C11.1369 8.26497 11.1995 8.27881 11.2622 8.27881C11.3525 8.27881 11.4429 8.24911 11.5169 8.19173L14.5443 5.84961H17.9289C18.6182 5.84961 19.1789 5.2889 19.1789 4.59961V1.26709C19.1789 0.577798 18.6182 0.0170898 17.9289 0.0170898ZM18.3455 4.59961C18.3455 4.82951 18.1584 5.01627 17.9289 5.01627H14.4019C14.3099 5.01627 14.2196 5.04679 14.1471 5.10335L11.6789 7.01293V5.43293C11.6789 5.20262 11.4925 5.01626 11.2622 5.01626H2.09595C1.86605 5.01626 1.67928 4.8295 1.67928 4.5996V1.26709C1.67928 1.03719 1.86605 0.850423 2.09595 0.850423H17.9289C18.1584 0.850423 18.3455 1.03719 18.3455 1.26709V4.59961Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n    <path\n      d=\"M12.7719 16.8693C12.7702 16.8685 12.7686 16.8685 12.767 16.8676C9.60534 15.6185 9.02348 15.0814 8.9189 14.9389V14.589C9.29813 14.1357 9.58053 13.6043 9.74328 13.0371C9.97603 12.8214 10.1274 12.5366 10.1754 12.2184C10.2238 11.8945 10.1595 11.5714 9.9744 11.2687V10.0549C9.9744 8.30931 8.92052 7.30792 7.08256 7.30792C5.27144 7.30792 4.1899 8.33494 4.1899 10.0549V11.263C4.02022 11.5307 3.94698 11.8449 3.98238 12.1647C4.0186 12.4886 4.16264 12.784 4.41939 13.0298C4.58174 13.6002 4.86495 14.1341 5.24622 14.589V14.9365C5.12415 15.1082 4.50362 15.6388 1.39327 16.8693C1.07262 17.0003 0.867141 17.3096 0.870399 17.653V19.1422C0.861449 19.602 1.22888 19.9837 1.69763 19.9935H12.4764C12.9354 19.9837 13.3025 19.602 13.2943 19.1504V17.657C13.2976 17.3095 13.0925 17.0003 12.7719 16.8693ZM12.461 17.653L12.4675 19.1601L1.70373 19.1504L1.70455 17.6424C5.30033 16.2199 5.92371 15.6054 6.06165 15.1521C6.07345 15.1131 6.07955 15.0724 6.07955 15.0309V14.4327C6.07955 14.3294 6.04089 14.2293 5.97132 14.1528C5.59778 13.741 5.32882 13.2381 5.19332 12.6993C5.17135 12.6115 5.09119 12.5097 5.02039 12.4528C4.90198 12.3584 4.82752 12.2233 4.81084 12.0727C4.79417 11.9222 4.83729 11.7741 4.93169 11.6561C4.9911 11.582 5.02324 11.49 5.02324 11.3956V10.0549C5.02324 8.80286 5.73532 8.14124 7.08257 8.14124C8.44853 8.14124 9.14108 8.78496 9.14108 10.0549V11.3948C9.14108 11.4835 9.19357 11.6015 9.24646 11.6731C9.33638 11.7952 9.37382 11.9449 9.35103 12.0947C9.32865 12.2444 9.24931 12.3763 9.12764 12.4658C9.04993 12.5227 8.99458 12.6058 8.97098 12.6993C8.83548 13.2381 8.56693 13.741 8.19339 14.1528C8.12422 14.2293 8.08557 14.3294 8.08557 14.4327V15.0309C8.08557 15.0716 8.09167 15.1131 8.10347 15.1521C8.24182 15.6062 8.86518 16.2223 12.461 17.6424L12.614 17.255L12.461 17.653Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n    <path\n      d=\"M17.8499 17.3218C17.0963 17.0402 16.311 16.8946 15.6803 16.7774C15.2636 16.7001 14.7526 16.6048 14.6272 16.5707V16.4315C15.3312 16.4152 16.0164 16.2224 16.6316 15.8651C16.7602 15.7902 16.8343 15.6511 16.8343 15.503C16.8343 15.354 16.7513 15.2141 16.6235 15.1392C16.3802 14.9968 16.0677 13.7736 15.9692 12.6131C15.9928 10.9766 14.6801 9.62486 13.0428 9.60126C12.4072 9.5972 11.8025 9.7807 11.2841 10.1469C11.097 10.2796 11.0522 10.54 11.1848 10.7276C11.3183 10.9164 11.5795 10.9587 11.7659 10.8273C12.1386 10.5636 12.5789 10.4309 13.0314 10.4346C14.2089 10.4517 15.1529 11.4234 15.1375 12.6416C15.1896 13.2797 15.3458 14.5948 15.7665 15.3614C15.2864 15.5534 14.7696 15.6291 14.2447 15.5884C14.1316 15.5803 14.0136 15.6185 13.9282 15.6966C13.8427 15.7756 13.7939 15.8871 13.7939 16.0034V16.6927C13.7939 16.7359 13.8004 16.7798 13.8142 16.8205C13.9713 17.3072 14.5906 17.4219 15.5281 17.5969C16.1124 17.7051 16.8367 17.8402 17.5122 18.086V19.1602H14.7273C14.497 19.1602 14.3107 19.3465 14.3107 19.5768C14.3107 19.8072 14.497 19.9935 14.7273 19.9935H17.5764C17.5781 19.9935 17.5805 19.9935 17.583 19.9935C17.784 19.9935 17.9736 19.9162 18.1168 19.7754C18.2625 19.633 18.3439 19.4418 18.3455 19.2342V18.0298C18.3439 17.7132 18.1429 17.4284 17.8499 17.3218Z\"\n      fill=\"white\"\n      fillOpacity=\"0.5\"\n    />\n  </svg>\n);\n","import React from 'react';\nimport { ChannelList } from 'stream-chat-react';\n\nimport './AgentChannelListContainer.css';\n\nimport { AgentChannelList } from '../AgentChannelList/AgentChannelList';\nimport { AgentChannelPreview } from '../AgentChannelList/AgentChannelPreview';\n\nimport { SearchIcon } from '../../assets';\n\nconst ChannelSearch = () => (\n  <div className=\"channel-search__container\">\n    <div className=\"channel-search__input__wrapper\">\n      <div className=\"channel-search__input__icon\">\n        <SearchIcon />\n      </div>\n      <input\n        className=\"channel-search__input__text\"\n        onChange={(e) => console.log(e.target.value)}\n        placeholder=\"Search\"\n        type=\"text\"\n      />\n    </div>\n  </div>\n);\n\nconst options = {\n  member: true,\n  watch: true,\n  limit: 3,\n};\nconst sort = { last_message_at: -1 };\n\nexport const AgentChannelListContainer = (props) => {\n  const { agentChannelId, customerChannelId } = props;\n\n  const filters = {\n    type: 'commerce',\n    id: { $in: [agentChannelId, customerChannelId] },\n  };\n\n  return (\n    <div className=\"agent-channel-list__container\">\n      <ChannelSearch />\n      <p className=\"agent-channel-list__conversation-header\">\n        Active Conversations\n      </p>\n      <ChannelList\n        filters={filters}\n        sort={sort}\n        options={options}\n        List={AgentChannelList}\n        Preview={(previewProps) => (\n          <AgentChannelPreview\n            {...previewProps}\n            {...{ agentChannelId, customerChannelId }}\n          />\n        )}\n      />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { ChatContext } from 'stream-chat-react';\n\nimport './NotificationPopup.css';\n\nimport { CloseIcon } from '../../assets';\n\nexport const NotificationPopup = (props) => {\n  const { eventChannel, previewText, setPopupVisible } = props;\n\n  const { setActiveChannel } = useContext(ChatContext);\n\n  const getMessagePreview = () => {\n    return previewText.length > 40\n      ? `\"${previewText.slice(0, 40)}...\"`\n      : `\"${previewText}\"`;\n  };\n\n  return (\n    <div\n      className=\"notification-popup__container\"\n      onClick={() => {\n        if (eventChannel) setActiveChannel(eventChannel);\n      }}\n    >\n      <div className=\"notification-popup__top-wrapper\">\n        <p className=\"notification-popup__top-text\">AGENT DASHBOARD</p>\n        <div\n          className=\"notification-popup__dismiss\"\n          onClick={() => setPopupVisible(false)}\n        >\n          <CloseIcon />\n        </div>\n      </div>\n      <p className=\"notification-popup__waiting-text\">\n        You have 1 new customer waiting\n      </p>\n      <p className=\"notification-popup__message-preview\">\n        {getMessagePreview()}\n      </p>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { ChatContext } from 'stream-chat-react';\n\nimport './AgentChannelHeader.css';\n\nimport { NotificationPopup } from './NotificationPopup';\n\nimport { DownIconSmall, EmailIcon, PhoneIcon } from '../../assets';\n\nexport const AgentChannelHeader = () => {\n  const { channel, client } = useContext(ChatContext);\n\n  const [eventChannel, setEventChannel] = useState(null);\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [previewText, setPreviewText] = useState('');\n\n  useEffect(() => {\n    const handleEvent = async (event) => {\n      if (event.channel_id !== channel.id && !event.message.automated) {\n        try {\n          const [response] = await client.queryChannels({ cid: event.cid });\n\n          setEventChannel(response);\n          setPreviewText(event.message.text);\n          setPopupVisible(true);\n        } catch (e) {\n          console.log('Message notification error:', e);\n        }\n      }\n    };\n\n    client.on('message.new', handleEvent);\n    return () => client.off('message.new', handleEvent);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (popupVisible) {\n      setTimeout(() => setPopupVisible(false), 3000);\n    }\n  }, [popupVisible]);\n\n  return (\n    <div className='agent-channel-header__container'>\n      <div className='agent-channel-header__top'>\n        <img alt={channel.data.name} src={channel.data.image} height='42px' width='42px' />\n        <p className='agent-channel-header__top__name'>{channel.data.name}</p>\n        <div className='agent-channel-header__top__circle'>\n          <div className='agent-channel-header__top__dot' />\n          <div className='agent-channel-header__top__dot' />\n          <div className='agent-channel-header__top__dot' />\n        </div>\n      </div>\n      <div className='agent-channel-header__middle'>\n        <div className='agent-channel-header__middle__wrapper'>\n          <PhoneIcon />\n          <p className='agent-channel-header__middle__text'>{channel.data.created_by.phone}</p>\n        </div>\n        <div className='agent-channel-header__middle__wrapper'>\n          <EmailIcon />\n          <p className='agent-channel-header__middle__text email'>{channel.data.created_by.email}</p>\n        </div>\n      </div>\n      <div className='agent-channel-header__bottom__border' />\n      <div className='agent-channel-header__bottom'>\n        <p className='agent-channel-header__bottom__type'>Issue</p>\n        <p className='agent-channel-header__bottom__selection'>{channel.data.issue}</p>\n        <DownIconSmall />\n        <p className='agent-channel-header__bottom__type'>Status</p>\n        <p className='agent-channel-header__bottom__selection'>Unresolved</p>\n        <DownIconSmall />\n      </div>\n      <div className='agent-channel-header__bottom__border' />\n      {popupVisible && previewText && <NotificationPopup {...{ eventChannel, previewText, setPopupVisible }} />}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { ImagePreviewer, FilePreviewer } from 'react-file-utils';\nimport { ChannelContext } from 'stream-chat-react';\n\nexport const UploadsPreview = ({\n  fileOrder,\n  fileUploads,\n  imageOrder,\n  imageUploads,\n  numberOfUploads,\n  removeFile,\n  removeImage,\n  uploadFile,\n  uploadImage,\n  uploadNewFiles,\n}) => {\n  const channelContext = useContext(ChannelContext);\n\n  return (\n    <>\n      {imageOrder.length > 0 && (\n        <ImagePreviewer\n          imageUploads={imageOrder.map((id) => imageUploads[id])}\n          handleRemove={removeImage}\n          handleRetry={uploadImage}\n          handleFiles={uploadNewFiles}\n          multiple={channelContext.multipleUploads}\n          disabled={\n            channelContext.maxNumberOfFiles !== undefined &&\n            numberOfUploads >= channelContext.maxNumberOfFiles\n          }\n        />\n      )}\n      {fileOrder.length > 0 && (\n        <FilePreviewer\n          uploads={fileOrder.map((id) => fileUploads[id])}\n          handleRemove={removeFile}\n          handleRetry={uploadFile}\n          handleFiles={uploadNewFiles}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { ChannelContext, ChatAutoComplete, ChatContext, EmojiPicker, useMessageInput } from 'stream-chat-react';\n\nimport './AgentMessageInput.css';\n\nimport { UploadsPreview } from './UploadsPreview';\n\nimport { FileIcon, SmileyFace } from '../../assets';\n\nconst automatedResponses = [\n  'Great! We have many resources on our website detailing various pricing plans, including which features are available. And, if you’re interested, follow the links at the bottom of each section to speak with our sales team: https://getstream.io/pricing/chat/',\n  'Got it. Our Enterprise program is one of the most popular among customers. You can find everything you need by following this link to our website: https://getstream.io/enterprise/',\n  'Good choice. We are always looking to add talented people to our team. You can find all of our current job listings on our website: https://getstream.io/enterprise/',\n  \"Great. Can you describe what you're looking for?\",\n];\n\nexport const AgentMessageInput = (props) => {\n  const messageInput = useMessageInput(props);\n\n  const { acceptedFiles, maxNumberOfFiles, multipleUploads } = useContext(ChannelContext);\n  const { client } = useContext(ChatContext);\n\n  useEffect(() => {\n    const handleEvent = async (event) => {\n      const { index } = event.message;\n\n      if (typeof index === 'number') {\n        try {\n          const [channel] = await client.queryChannels({ cid: event.cid });\n\n          setTimeout(\n            () =>\n              channel.sendMessage({\n                text: automatedResponses[index],\n                automated: true,\n              }),\n            1000,\n          );\n        } catch (e) {\n          console.log('Auto response error:', e);\n        }\n      }\n    };\n\n    client.on('message.new', handleEvent);\n    return () => client.off('message.new', handleEvent);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className='agent-message-input__wrapper'>\n      <ImageDropzone\n        accept={acceptedFiles}\n        handleFiles={messageInput.uploadNewFiles}\n        multiple={multipleUploads}\n        disabled={maxNumberOfFiles !== undefined && messageInput.numberOfUploads >= maxNumberOfFiles}\n      >\n        <div className='agent-message-input__input'>\n          <UploadsPreview {...messageInput} />\n          <div className='agent-message-input__input-wrapper'>\n            <ChatAutoComplete\n              commands={messageInput.getCommands()}\n              innerRef={messageInput.textareaRef}\n              handleSubmit={messageInput.handleSubmit}\n              onSelectItem={messageInput.onSelectItem}\n              onChange={messageInput.handleChange}\n              value={messageInput.text}\n              rows={1}\n              maxRows={props.maxRows}\n              placeholder='Send a message'\n              onPaste={messageInput.onPaste}\n              triggers={props.autocompleteTriggers}\n              grow={props.grow}\n              disabled={props.disabled}\n              additionalTextareaProps={{\n                ...props.additionalTextareaProps,\n              }}\n            />\n            <SmileyFace openEmojiPicker={messageInput.openEmojiPicker} />\n            <FileUploadButton handleFiles={messageInput.uploadNewFiles}>\n              <FileIcon />\n            </FileUploadButton>\n          </div>\n        </div>\n      </ImageDropzone>\n      <EmojiPicker {...messageInput} />\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  Channel,\n  MessageCommerce,\n  MessageInput,\n  MessageList,\n  Window,\n} from 'stream-chat-react';\n\nimport { AgentChannelListContainer } from './components/AgentChannelListContainer/AgentChannelListContainer';\nimport { AgentChannelHeader } from './components/AgentChannelHeader/AgentChannelHeader';\nimport { AgentMessageInput } from './components/MessageInput/AgentMessageInput';\n\nexport const AgentApp = ({ agentChannelId, customerChannelId }) => (\n  <div style={{ display: 'flex', height: 'calc(100vh - 60px)' }}>\n    <AgentChannelListContainer {...{ agentChannelId, customerChannelId }} />\n    <div className=\"agent-channel-wrapper\">\n      <Channel>\n        <Window>\n          <AgentChannelHeader />\n          <MessageList Message={MessageCommerce} />\n          <MessageInput focus Input={AgentMessageInput} />\n        </Window>\n      </Channel>\n    </div>\n  </div>\n);\n","/* eslint-disable global-require */\nimport React from 'react';\n\nimport './AgentHeader.css';\n\nimport { BellIcon, DownIcon, HeadsetIcon, TalkingIcon } from '../../assets';\n\nexport const AgentHeader = () => {\n  return (\n    <div className=\"agent-header__container\">\n      <div className=\"agent-header__left\">\n        <HeadsetIcon />\n        <p className=\"agent-header__left__text\">37 Agents Online</p>\n        <TalkingIcon />\n        <p className=\"agent-header__left__text\">Serving 85 Customers</p>\n      </div>\n      <div className=\"agent-header__right\">\n        <div className=\"active-slider__background\">\n          <div className=\"active-slider__ball\" />\n        </div>\n        <p className=\"agent-header__left__text\">Active</p>\n        <BellIcon />\n        <img\n          src={require('../../assets/user1.png')}\n          alt=\"user-1\"\n          height=\"35\"\n          width=\"35\"\n        />\n        <DownIcon />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './AgentLoading.css';\n\nexport const AgentLoading = () => (\n  <div className=\"agent-loading__container\">\n    <div className=\"agent-loading__list\" />\n    <div className=\"agent-loading__channel\">Loading test environment...</div>\n  </div>\n);\n","import React from 'react';\n\nimport './EmptyStateIndicator.css';\n\nconst openingPrompts = [\n  'I have a pricing question',\n  'I have a question about Enterprise',\n  'I would like to learn more about the company',\n  'Other',\n];\n\nexport const EmptyStateIndicator = ({ channel }) => {\n  const sendInitialMessage = (prompt, index) => {\n    channel.sendMessage({ text: prompt, index });\n  };\n\n  return (\n    <div className='empty-state__container'>\n      <p className='empty-state__heading'>How may we assist you?</p>\n      <div className='empty-state__responses'>\n        {openingPrompts.map((prompt, i) => {\n          return (\n            <div className='empty-state__response__wrapper' key={i} onClick={() => sendInitialMessage(prompt, i)}>\n              <p className='empty-state__response__text'>{prompt}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable global-require */\nimport React from 'react';\n\nimport './CustomerChannelHeader.css';\n\nimport { ClockIcon } from '../../assets';\n\nexport const CustomerChannelHeader = () => (\n  <div className=\"channel-header__container\">\n    <div className=\"channel-header__heading\">\n      <div style={{ width: '115px' }}>\n        <img\n          className=\"channel-header__image-3\"\n          src={require('../../assets/user3.png')}\n          alt=\"user-3\"\n          height=\"64\"\n          width=\"64\"\n        />\n        <img\n          className=\"channel-header__image-2\"\n          src={require('../../assets/user2.png')}\n          alt=\"user-2\"\n          height=\"64\"\n          width=\"64\"\n        />\n        <img\n          className=\"channel-header__image-1\"\n          src={require('../../assets/user1.png')}\n          alt=\"user-1\"\n          height=\"64\"\n          width=\"64\"\n        />\n        <div className=\"channel-header__active\" />\n      </div>\n      <div className=\"channel-header__text\">\n        <p className=\"channel-header__name\">\n          Hello\n          <span role=\"img\" aria-label=\"waving-hand\">\n            👋\n          </span>\n        </p>\n        <p className=\"channel-header__subtitle\">We are here to help.</p>\n      </div>\n    </div>\n    <div className=\"channel-header__wait__wrapper\">\n      <ClockIcon />\n      <p className=\"channel-header__wait__text\">\n        Average wait time: <b>2 minutes</b>\n      </p>\n    </div>\n  </div>\n);\n","import React, { useContext, useEffect } from 'react';\nimport { ImageDropzone, FileUploadButton } from 'react-file-utils';\nimport { ChannelContext, ChatAutoComplete, EmojiPicker, useMessageInput } from 'stream-chat-react';\n\nimport './CustomerMessageInput.css';\n\nimport { UploadsPreview } from './UploadsPreview';\n\nimport { FileIcon, SmileyFace } from '../../assets';\n\nexport const CustomerMessageInput = (props) => {\n  const { open, setOpen } = props;\n\n  const messageInput = useMessageInput(props);\n\n  const { acceptedFiles, maxNumberOfFiles, multipleUploads } = useContext(ChannelContext);\n\n  useEffect(() => {\n    if (open) {\n      messageInput.textareaRef.current.focus();\n    } else {\n      messageInput.textareaRef.current.blur();\n    }\n  }, [messageInput.textareaRef, open]);\n\n  useEffect(() => {\n    if (messageInput.text) {\n      setOpen(true);\n    }\n  }, [messageInput.text, setOpen]);\n\n  const handleSubmit = (event) => {\n    if (messageInput.text.startsWith('/')) {\n      event.target.value = '';\n      return messageInput.handleChange(event);\n    }\n    messageInput.handleSubmit(event);\n  };\n\n  return (\n    <div className='support-message-input__wrapper'>\n      <ImageDropzone\n        accept={acceptedFiles}\n        handleFiles={messageInput.uploadNewFiles}\n        multiple={multipleUploads}\n        disabled={maxNumberOfFiles !== undefined && messageInput.numberOfUploads >= maxNumberOfFiles}\n      >\n        <div className='support-message-input__input'>\n          <UploadsPreview {...messageInput} />\n          <div className='support-message-input__input-wrapper'>\n            <ChatAutoComplete\n              commands={messageInput.getCommands()}\n              innerRef={messageInput.textareaRef}\n              handleSubmit={handleSubmit}\n              onSelectItem={messageInput.onSelectItem}\n              onChange={messageInput.handleChange}\n              value={messageInput.text}\n              rows={1}\n              maxRows={props.maxRows}\n              placeholder='Ask us a question'\n              onPaste={messageInput.onPaste}\n              triggers={props.autocompleteTriggers}\n              grow={props.grow}\n              disabled={props.disabled}\n              additionalTextareaProps={{\n                ...props.additionalTextareaProps,\n              }}\n            />\n            <SmileyFace openEmojiPicker={messageInput.openEmojiPicker} />\n            <FileUploadButton handleFiles={messageInput.uploadNewFiles}>\n              <FileIcon />\n            </FileUploadButton>\n          </div>\n        </div>\n      </ImageDropzone>\n      <EmojiPicker {...messageInput} />\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Channel,\n  ChatContext,\n  MessageCommerce,\n  MessageInput,\n  MessageList,\n  Window,\n} from 'stream-chat-react';\n\nimport { EmptyStateIndicator } from './components/CustomerEmptyStateIndicator/EmptyStateIndicator';\nimport { CustomerChannelHeader } from './components/CustomerChannelHeader/CustomerChannelHeader';\nimport { CustomerMessageInput } from './components/MessageInput/CustomerMessageInput';\n\nimport { CloseCustomerIcon, OpenCustomerIcon } from './assets';\n\nexport const CustomerApp = ({ customerChannelId }) => {\n  const { client: customerClient } = useContext(ChatContext);\n\n  const [customerChannel, setCustomerChannel] = useState();\n  const [open, setOpen] = useState(true);\n\n  useEffect(() => {\n    const getCustomerChannel = async () => {\n      const newChannel = await customerClient.channel(\n        'commerce',\n        customerChannelId,\n        {\n          name: 'Kevin Rosen',\n          image: require('./assets/kevin-avatar.png'), // eslint-disable-line\n          issue: 'Company Inquiry',\n          subtitle: '#853 Company Inquiry',\n        },\n      );\n\n      if (newChannel.state.messages.length) {\n        newChannel.state.clearMessages();\n      }\n\n      await newChannel.watch();\n\n      setCustomerChannel(newChannel);\n    };\n\n    getCustomerChannel();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className={`customer-wrapper ${open ? 'wrapper--open' : ''}`}>\n      {customerChannel && open && (\n        <Channel channel={customerChannel}>\n          <Window>\n            <CustomerChannelHeader />\n            {open && (\n              <div style={{ background: '#005fff' }}>\n                <MessageList\n                  EmptyStateIndicator={(props) => (\n                    <EmptyStateIndicator {...props} channel={customerChannel} />\n                  )}\n                  Message={MessageCommerce}\n                />\n              </div>\n            )}\n            <MessageInput\n              Input={(props) => (\n                <CustomerMessageInput {...props} {...{ open, setOpen }} />\n              )}\n              focus\n            />\n          </Window>\n        </Channel>\n      )}\n      <div\n        className={`toggle-button ${open && 'close-button'}`}\n        onClick={() => setOpen(!open)}\n      >\n        {open ? <CloseCustomerIcon /> : <OpenCustomerIcon />}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable global-require */\nimport React, { useEffect, useState } from 'react';\nimport { Chat } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport 'stream-chat-react/dist/css/index.css';\n\nimport './App.css';\n\nimport { useChecklist } from './ChecklistTasks';\nimport { AgentApp } from './AgentApp';\nimport { AgentHeader } from './components/AgentHeader/AgentHeader';\nimport { AgentLoading } from './components/AgentLoading/AgentLoading';\nimport { CustomerApp } from './CustomerApp';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst apiKey = urlParams.get('apikey') || process.env.REACT_APP_STREAM_KEY;\nconst agentChannelId = `agent-demo-${uuidv4()}`;\nconst customerChannelId = `customer-demo-${uuidv4()}`;\nconst targetOrigin = urlParams.get('target_origin') || process.env.REACT_APP_TARGET_ORIGIN;\nconst theme = 'light';\n\nconst previousUserId = urlParams.get('user1') || process.env.REACT_APP_PREVIOUS_ID;\nconst previousUserToken = urlParams.get('user1_token') || process.env.REACT_APP_PREVIOUS_TOKEN;\n\nconst agentUserId = urlParams.get('user2') || process.env.REACT_APP_AGENT_ID;\nconst agentUserToken = urlParams.get('user2_token') || process.env.REACT_APP_AGENT_TOKEN;\n\nconst customerUserId = urlParams.get('user3') || process.env.REACT_APP_CUSTOMER_ID;\nconst customerUserToken = urlParams.get('user3_token') || process.env.REACT_APP_CUSTOMER_TOKEN;\n\nconst customerClient = StreamChat.getInstance(apiKey);\ncustomerClient.connectUser(\n  {\n    id: customerUserId,\n    name: 'Kevin Rosen',\n    image: require('./assets/kevin-avatar.png'),\n    phone: '+1 (303) 555-1212',\n    email: 'kevin@example.com',\n  },\n  customerUserToken,\n);\n\nconst App = () => {\n  const [agentClient, setAgentClient] = useState();\n  const [initialClient, setInitialClient] = useState();\n  const [initialChannel, setInitialChannel] = useState();\n\n  /**\n   * Creates and watches a channel with a mock customer as the user\n   */\n  useEffect(() => {\n    const getInitialChannel = async () => {\n      const client = new StreamChat(apiKey); // since app is dual client need to construct an additional instance\n      await client.connectUser(\n        {\n          id: previousUserId,\n          name: 'Jen Alexander',\n          image: require('./assets/jen-avatar.png'),\n          phone: '+1 (720) 555-1525',\n          email: 'jen@example.com',\n          role: 'moderator',\n        },\n        previousUserToken,\n      );\n      setInitialClient(client);\n\n      const newChannel = await client.channel('commerce', agentChannelId, {\n        image: require('./assets/jen-avatar.png'),\n        name: 'Jen Alexander',\n        issue: 'Enterprise Inquiry',\n        subtitle: '#572 Enterprise Inquiry',\n      });\n\n      if (newChannel.state.messages.length) {\n        newChannel.state.clearMessages();\n      }\n\n      await newChannel.watch();\n\n      setInitialChannel(newChannel);\n    };\n\n    getInitialChannel();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  /**\n   * Sends messages to mock channel, disconnects mock channel, and sets\n   * support agent as current user\n   */\n  useEffect(() => {\n    const sendMessages = async () => {\n      await initialChannel.sendMessage({\n        text: 'I have a question about Enterprise',\n      });\n\n      await initialChannel.sendMessage({\n        text: 'My company is looking to upgrade our account to Enterprise. Can you provide me with some additional pricing information?',\n      });\n\n      await initialChannel.stopWatching();\n      await initialClient.disconnect();\n\n      const client = new StreamChat(apiKey); // since app is dual client need to construct an additional instance\n      await client.connectUser({ id: agentUserId, name: 'Daniel Smith', image: require('./assets/user1.png') }, agentUserToken);\n\n      const [existingChannel] = await client.queryChannels({\n        id: agentChannelId,\n      });\n\n      await existingChannel.watch();\n\n      setAgentClient(client);\n    };\n\n    if (initialChannel && !initialChannel.state.messages.length) {\n      sendMessages();\n    }\n  }, [initialChannel]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useChecklist(customerClient, targetOrigin);\n\n  return (\n    <>\n      <div className='agent-wrapper'>\n        <AgentHeader />\n        {agentClient ? (\n          <Chat client={agentClient}>\n            <AgentApp {...{ agentChannelId, customerChannelId }} />\n          </Chat>\n        ) : (\n          <AgentLoading />\n        )}\n      </div>\n      {customerClient && (\n        <Chat client={customerClient} theme={`commerce ${theme}`}>\n          <CustomerApp {...{ customerChannelId }} />\n        </Chat>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/user1.c9f4f7c2.png\";"],"sourceRoot":""}